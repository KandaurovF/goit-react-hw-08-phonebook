{"version":3,"file":"static/js/246.dd618e08.chunk.js","mappings":"mMAiJA,UA3EqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,IAEJ,IAmBMW,EAAeC,MAAMC,QAAQX,IAAaA,EAASY,OAAS,EAClE,OACE,4BAME,wBAAI,eACJ,kBAAMC,SA5BW,SAAAC,GACnBA,EAAMC,iBAEN,IAGMC,EAAW,CACfC,KAJWH,EAAMI,cAAcC,SAASC,YAAYC,MAKpDC,OAJaR,EAAMI,cAAcC,SAASI,cAAcF,OAO1DvB,GAAS0B,EAAAA,EAAAA,IAAWR,IACpBF,EAAMI,cAAcO,OACrB,EAeG,WACE,8BACE,uBAAG,WACH,kBAAOC,KAAK,OAAOT,KAAK,cAAcU,UAAQ,EAACC,UAAW,QAE5D,8BACE,uBAAG,aACH,kBAAOF,KAAK,OAAOT,KAAK,gBAAgBU,UAAQ,EAACC,UAAW,QAE9D,0BACE,mBAAQF,KAAK,SAAb,SAAsB,qBAGf,OAAVrB,IACC,eAAGwB,UAAU,UAAb,UAAuB,6DACsCxB,KAG9DF,IAAa,SAAC,IAAD,KACd,wBACGM,GACCT,EAAS8B,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMK,EAAb,EAAaA,OAAb,OACX,2BACE,0BAAI,SACKL,EAAM,KACb,mBAAQe,QAAS,kBAtCHC,EAsC6BF,OArCvDjC,GAASoC,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAsCG,EAAjB,SAAgD,aAElD,yBAAG,kBACa,uBAAIX,SANbS,EADE,QActB,C","sources":["pages/ContactsPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import ContactForm from '../components/ContactForm';\n// import ContactList from '../components/ContactList';\n// import Filter from '../components/Filter';\n// import IconButton from '../components/IconButton';\n// import Modal from '../components/Modal';\n// import { ImUserPlus } from 'react-icons/im';\n// import { useDispatch, useSelector } from 'react-redux';\n// // import { fetchContacts } from '../redux/contacts/API';\n// // import { selectError, selectIsLoading } from '../redux/contacts/contactsSlice';\n// import Loader from '../components/Loader';\n// import {\n//   selectContactsError,\n//   selectContactsIsLoading,\n// } from 'redux/contactsReducer';\n\n// export const ContactPage = () => {\n//   const [showModal, setShowModal] = useState(false);\n\n//   const toggleModal = () => {\n//     setShowModal(!showModal);\n//   };\n\n//   const isLoading = useSelector(selectContactsIsLoading);\n//   const error = useSelector(selectContactsError);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(fetchContacts());\n//   }, [dispatch]);\n\n//   return (\n//     <div className=\"wrapper\">\n//       <h1 className=\"main__heading\">Phonebook</h1>\n//       <div className=\"container\">\n//         {showModal && (\n//           <Modal onClose={toggleModal}>\n//             <ContactForm closeModal={toggleModal} />\n//           </Modal>\n//         )}\n\n//         <div className=\"contacts__header\">\n//           <h2 className=\"secondary__heading\">Contacts</h2>\n//           <IconButton onClick={toggleModal} aria-label=\"Add contact\">\n//             <ImUserPlus size={20} fill=\"#000\" />\n//           </IconButton>\n//         </div>\n\n//         <Filter />\n//         {isLoading && !error && <Loader />}\n//         <ContactList />\n//       </div>\n//     </div>\n//   );\n// };\n\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\n// import { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\n// import imgFavicon from '../images/favicon-32x32.png';\nimport {\n  addContact,\n  deleteContact,\n  requestContacts,\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contactsReducer';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.contactName.value;\n    const number = event.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(formData));\n    event.currentTarget.reset();\n  };\n\n  const handleDeleteContact = contacId => {\n    dispatch(deleteContact(contacId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div>\n      {/* <Helmet>\n        <meta charSet=\"utf-8\" />\n        <link rel=\"icon\" type=\"image/x-icon\" href={imgFavicon}></link>\n        <title>Contacts</title>\n      </Helmet> */}\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input type=\"text\" name=\"contactName\" required minLength={2} />\n        </label>\n        <label>\n          <p>Number:</p>\n          <input type=\"text\" name=\"contactNumber\" required minLength={6} />\n        </label>\n        <div>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n      {error !== null && (\n        <p className=\"c-error\">\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && <Loader />}\n      <ul>\n        {showContacts &&\n          contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              <h3>\n                Name: {name}{' '}\n                <button onClick={() => handleDeleteContact(id)}>&times;</button>\n              </h3>\n              <p>\n                Phone number: <b>{number}</b>\n              </p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","contacts","useSelector","selectContacts","isLoading","selectContactsIsLoading","error","selectContactsError","useEffect","requestContacts","showContacts","Array","isArray","length","onSubmit","event","preventDefault","formData","name","currentTarget","elements","contactName","value","number","contactNumber","addContact","reset","type","required","minLength","className","map","id","onClick","contacId","deleteContact"],"sourceRoot":""}