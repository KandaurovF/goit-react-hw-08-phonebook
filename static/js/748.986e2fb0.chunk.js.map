{"version":3,"file":"static/js/748.986e2fb0.chunk.js","mappings":"wOAEaA,EAASC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KAAaG,SAAS,qBAC5BC,MAAOJ,EAAAA,KACJI,MAAM,yBACND,SAAS,sBACZE,SAAUL,EAAAA,KACPM,IAAI,EAAG,+CACPH,SAAS,2BAGDI,EAAiB,CAC5BL,KAAM,GACNE,MAAO,GACPC,SAAU,ICdZ,EAAkC,sCAAlC,EAAoF,gCAApF,EAAoI,oCAApI,EAAyL,qCAAzL,EAAsO,4BAAtO,EAAyQ,2BAAzQ,EAA4S,4BAA5S,EAAuV,mCAAvV,EAAsY,gC,SCsFtY,EAhFqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAOjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAkC,4BAClC,cAAGD,UAAWC,EAAd,SAAkC,yFAIlC,SAAC,KAAD,CACEC,cAAeL,EACfM,iBAAkBd,EAClBe,SAhBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,GAASS,EAAAA,EAAAA,IAAaF,IACtBC,GACD,EAUK,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,mBAAOR,UAAWC,EAAWQ,QAAQ,WAArC,WACE,SAAC,KAAD,CACET,UAAWC,EACXT,KAAK,OACLkB,KAAK,OACLC,GAAG,WACHC,YAAY,IACZJ,aAAa,SAEf,iBAAMR,UAAWC,EAAjB,SAA2B,WAC3B,SAAC,KAAD,CACED,UAAWC,EACXT,KAAK,OACLqB,UAAU,UAGd,mBAAOb,UAAWC,EAAWQ,QAAQ,YAArC,WACE,SAAC,KAAD,CACET,UAAWC,EACXT,KAAK,QACLmB,GAAG,YACHD,KAAK,OACLE,YAAY,IACZJ,aAAa,SAEf,iBAAMR,UAAWC,EAAjB,SAA2B,YAC3B,SAAC,KAAD,CACED,UAAWC,EACXT,KAAK,QACLqB,UAAU,UAGd,mBAAOb,UAAWC,EAAWQ,QAAQ,eAArC,WACE,SAAC,KAAD,CACET,UAAWC,EACXT,KAAK,WACLkB,KAAK,WACLC,GAAG,eACHC,YAAY,IACZJ,aAAa,SAEf,iBAAMR,UAAWC,EAAjB,SAA2B,eAC3B,SAAC,KAAD,CACED,UAAWC,EACXT,KAAK,WACLqB,UAAU,UAGd,mBAAQb,UAAWC,EAAeS,KAAK,SAAvC,SAAgD,sBAQ3D,C","sources":["constants/RegisterConfig.js","webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const schema = Yup.object().shape({\n  name: Yup.string().required('Name is required!'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(7, 'Password must be at least 7 characters long')\n    .required('Password is required!'),\n});\n\nexport const INITIAL_VALUES = {\n  name: '',\n  email: '',\n  password: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"spaceBackground\":\"RegisterPage_spaceBackground__hZsY3\",\"container\":\"RegisterPage_container__l-2BF\",\"form__heading\":\"RegisterPage_form__heading__6c1ZX\",\"heading__descr\":\"RegisterPage_heading__descr__xYtdj\",\"label\":\"RegisterPage_label__R5ZZF\",\"span\":\"RegisterPage_span__GQgaU\",\"input\":\"RegisterPage_input__9WI6M\",\"errorMessage\":\"RegisterPage_errorMessage__Fc9jT\",\"submitBtn\":\"RegisterPage_submitBtn__9Oz0F\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/authReducer';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { schema, INITIAL_VALUES } from '../../constants/RegisterConfig';\nimport css from './RegisterPage.module.css';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(registerUser(values));\n    resetForm();\n  };\n\n  return (\n    <div className={css.spaceBackground}>\n      <div className={css.container}>\n        <h1 className={css.form__heading}>Sign up for an account</h1>\n        <p className={css.heading__descr}>\n          Signing up for an account is free and easy. Fill out the form below to\n          get started.\n        </p>\n        <Formik\n          initialValues={INITIAL_VALUES}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form autoComplete=\"off\">\n            <label className={css.label} htmlFor=\"userName\">\n              <Field\n                className={css.input}\n                name=\"name\"\n                type=\"text\"\n                id=\"userName\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <span className={css.span}>name:</span>\n              <ErrorMessage\n                className={css.errorMessage}\n                name=\"name\"\n                component=\"p\"\n              />\n            </label>\n            <label className={css.label} htmlFor=\"userEmail\">\n              <Field\n                className={css.input}\n                name=\"email\"\n                id=\"userEmail\"\n                type=\"text\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <span className={css.span}>Email:</span>\n              <ErrorMessage\n                className={css.errorMessage}\n                name=\"email\"\n                component=\"p\"\n              />\n            </label>\n            <label className={css.label} htmlFor=\"userPassword\">\n              <Field\n                className={css.input}\n                name=\"password\"\n                type=\"password\"\n                id=\"userPassword\"\n                placeholder=\" \"\n                autoComplete=\"off\"\n              />\n              <span className={css.span}>Password:</span>\n              <ErrorMessage\n                className={css.errorMessage}\n                name=\"password\"\n                component=\"p\"\n              />\n            </label>\n            <button className={css.submitBtn} type=\"submit\">\n              Register\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["schema","Yup","shape","name","required","email","password","min","INITIAL_VALUES","dispatch","useDispatch","className","css","initialValues","validationSchema","onSubmit","values","resetForm","registerUser","autoComplete","htmlFor","type","id","placeholder","component"],"sourceRoot":""}